<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog/1.9" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog/1.9 http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd">
    <changeSet author="kkrumlian" id="2014-01-30-OC-4168-1" runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <dbms type="postgresql" />
            <!--<runningAs username="clinica" />-->
        </preConditions>
        <sql splitStatements="false">
            /*group assignment trigger*/
            CREATE OR REPLACE FUNCTION subject_group_assignment_trigger() RETURNS "trigger"
            AS 'DECLARE
            pk INTEGER;
            group_name TEXT;
            old_group_name TEXT;
            new_group_name TEXT;
            study_group_class_name TEXT;
            BEGIN
            IF (TG_OP = ''INSERT'') THEN
            SELECT INTO pk NEXTVAL(''audit_log_event_audit_id_seq'');
            SELECT INTO group_name sg.name FROM study_group sg WHERE sg.study_group_id = NEW.study_group_id;
            SELECT INTO study_group_class_name sgc.name FROM study_group sg join study_group_class sgc ON sg.study_group_class_id = sgc.study_group_class_id WHERE sg.study_group_id = NEW.study_group_id ;
            INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value)
            VALUES (pk, ''28'', now(), NEW.owner_id, ''subject_group_map'', NEW.study_subject_id, study_group_class_name,'''', group_name);
            END IF;
            IF (TG_OP = ''UPDATE'') THEN
            IF(OLD.study_group_id <![CDATA[<>]]> NEW.study_group_id) THEN
            SELECT INTO pk NEXTVAL(''audit_log_event_audit_id_seq'');
            SELECT INTO old_group_name sg.name FROM study_group sg WHERE sg.study_group_id = OLD.study_group_id;
            SELECT INTO new_group_name sg.name FROM study_group sg WHERE sg.study_group_id = NEW.study_group_id;
            SELECT INTO study_group_class_name sgc.name FROM study_group sg join study_group_class sgc ON sg.study_group_class_id = sgc.study_group_class_id WHERE sg.study_group_id = NEW.study_group_id ;
            INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value)
            VALUES (pk, ''29'', now(), NEW.update_id, ''subject_group_map'', NEW.study_subject_id, study_group_class_name,old_group_name, new_group_name);
            END IF;
            RETURN NULL;  /*return values ignored for ''after'' triggers*/
            END IF;
            RETURN NULL;
            END;'
            LANGUAGE plpgsql;
        </sql>
    </changeSet>
</databaseChangeLog>
